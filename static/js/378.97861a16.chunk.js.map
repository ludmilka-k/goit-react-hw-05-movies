{"version":3,"file":"static/js/378.97861a16.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","services/data.js","services/mtdb-api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../../services/mtdb-api';\nimport { Loader } from '../Loader';\nimport defaultPhoto from '../../images/no-photo.png';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { id } = useParams(null);\n\n  useEffect(() => {\n    const getCastById = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovieCredits(id);\n        const cast = data.cast;\n        if (cast.length === null) {\n          return Notify.failure('Oops! Something went wrong!');\n        }\n        setCast(cast);\n      } catch (error) {\n        setError(true);\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCastById();\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Oops! Something went wrong!</p>}\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(actor => {\n            const actorsPhoto = actor.profile_path\n              ? `https://image.tmdb.org/t/p/w92${actor.profile_path}`\n              : defaultPhoto;\n            return (\n              <li key={actor.id}>\n                <img src={actorsPhoto} alt='NonPhoto' />\n                <p>{actor.original_name}</p>\n                <p>Character: {actor.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any casts for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","export const API_KEY = '183c3cacc9c38c09c14d38798ccfe9d7';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from './data.js'\n\nexport const getTrendsMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n    // throw new Error(error);\n  }\n}\n\nexport const getSearchMovies = async (query) => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getMovieDetails = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n\n\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","id","useParams","useEffect","getCastById","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","_cast","wrap","_context","prev","next","getMovieCredits","sent","length","abrupt","Notify","t0","console","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","map","actor","actorsPhoto","profile_path","concat","src","alt","original_name","character","API_KEY","BASE_URL","getTrendsMovies","url","_yield$axios$get","axios","log","getSearchMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}